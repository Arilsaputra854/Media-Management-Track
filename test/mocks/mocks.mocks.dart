// Mocks generated by Mockito 5.4.6 from annotations
// in media_management_track/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i7;

import 'package:flutter/material.dart' as _i6;
import 'package:media_management_track/model/borrow_request.dart' as _i3;
import 'package:media_management_track/viewmodel/borrow_request_viewmodel.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BorrowRequestViewmodel].
///
/// See the documentation for Mockito's code generation for more information.
class MockBorrowRequestViewmodel extends _i1.Mock
    implements _i2.BorrowRequestViewmodel {
  MockBorrowRequestViewmodel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i3.BorrowRequest> get requests =>
      (super.noSuchMethod(
            Invocation.getter(#requests),
            returnValue: <_i3.BorrowRequest>[],
          )
          as List<_i3.BorrowRequest>);

  @override
  _i4.Stream<List<_i3.BorrowRequest>> get requestStream =>
      (super.noSuchMethod(
            Invocation.getter(#requestStream),
            returnValue: _i4.Stream<List<_i3.BorrowRequest>>.empty(),
          )
          as _i4.Stream<List<_i3.BorrowRequest>>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<String> getUserNameById(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserNameById, [userId]),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#getUserNameById, [userId]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> fetchRequests() =>
      (super.noSuchMethod(
            Invocation.method(#fetchRequests, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> approveRequest(
    _i3.BorrowRequest? request,
    _i6.BuildContext? context,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#approveRequest, [request, context]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> declineRequest(
    _i3.BorrowRequest? request,
    _i6.BuildContext? context,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#declineRequest, [request, context]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String> getSchoolNameById(String? schoolId) =>
      (super.noSuchMethod(
            Invocation.method(#getSchoolNameById, [schoolId]),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#getSchoolNameById, [schoolId]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<String> getMediaNameById(String? mediaId) =>
      (super.noSuchMethod(
            Invocation.method(#getMediaNameById, [mediaId]),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#getMediaNameById, [mediaId]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
